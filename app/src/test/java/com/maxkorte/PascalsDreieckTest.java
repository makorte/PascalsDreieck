/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.maxkorte;

import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

public class PascalsDreieckTest {
    static PascalsDreieck pascalsDreieck;

    @Test
    public void testConstructor() {
        assertThrows(IllegalArgumentException.class, () -> new PascalsDreieck(1));
        assertThrows(IllegalArgumentException.class, () -> new PascalsDreieck(0));
        assertThrows(IllegalArgumentException.class, () -> new PascalsDreieck(Integer.MIN_VALUE));
    }

    @BeforeClass
    public static void beforeClass() throws Exception {
        pascalsDreieck = new PascalsDreieck(4);
    }


    @Test
    public void testInitDreieck() {
        assertEquals(4, pascalsDreieck.dreieck.length);
        assertEquals(3, pascalsDreieck.dreieck[2].length);
    }

    @Test
    public void testBerechneDreieck() {
        pascalsDreieck.berechneDreieck();

        int[] zeile1 = {1};
        int[] zeile2 = {1, 1};
        int[] zeile3 = {1, 2, 1};
        int[] zeile4 = {1, 3, 3, 1};

        assertArrayEquals(zeile1, pascalsDreieck.dreieck[0]);
        assertArrayEquals(zeile2, pascalsDreieck.dreieck[1]);
        assertArrayEquals(zeile3, pascalsDreieck.dreieck[2]);
        assertArrayEquals(zeile4, pascalsDreieck.dreieck[3]);
    }

    @Test
    public void testGetZeile() {
        assertThrows(IllegalArgumentException.class, () -> pascalsDreieck.getZeile(0));
        assertThrows(IllegalArgumentException.class, () -> pascalsDreieck.getZeile(5));
        assertThrows(IllegalArgumentException.class, () -> pascalsDreieck.getZeile(Integer.MIN_VALUE));
        assertThrows(IllegalArgumentException.class, () -> pascalsDreieck.getZeile(Integer.MAX_VALUE));
    }
}
